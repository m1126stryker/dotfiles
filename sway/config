# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Daemons and Listeners
#
exec wl-paste --watch cliphist store
exec mako
exec $HOME/.config/sway/scripts/weather.sh
exec $HOME/.config/sway/scripts/statusd.sh
include /etc/sway/config.d/*
### Include your preferred Color Palette
#
include palette/catppuccin-mocha
### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred web browser
set $wbrowser google-chrome-stable
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $wmenu-theme -N 181825 -n b4befe -M 1e1e2e -m bac2de -S cba6f7 -s 181825 
#set $menu wmenu-run -b | xargs swaymsg exec --
set $menu wmenu $wmenu-theme -b


### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /home/m1126stryker/.config/bg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
### Idle configuration
#
# Example configuration:
#
 exec swayidle -w \
          timeout 300 'if  [[ $(pgrep swaylock) == "" ]]; then swaylock; fi' \
          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
          before-sleep 'if  [[ $(pgrep swaylock) == "" ]]; then swaylock; fi'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
   input "2:7:SynPS/2_Synaptics_TouchPad" {
       dwt disabled
       tap enabled
       natural_scroll enabled
       middle_emulation enabled
       pointer_accel 0.3
   }
   input "2:10:TPPS/2_Elan_TrackPoint" {
      pointer_accel 0.2
      dwt disabled
   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym --to-code $mod+q kill

    # Start browser
    bindsym --to-code $mod+g exec $wbrowser

    # Execute command -wmenu-
    # Normal:
    bindsym --to-code $mod+d exec wmenu-run $wmenu-theme -b | wl-copy
    # Interactive:
    bindsym --to-code $mod+Shift+d exec ~/.config/sway/scripts/cmdexec.sh "$wmenu-theme"
    # Playerctl Play/Pause 
    bindsym --to-code $mod+p exec playerctl play-pause
    bindsym --to-code $mod+Shift+p exec playerctl play-pause -a
    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym --to-code $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym --to-code $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym --to-code $mod+$left focus left
    bindsym --to-code $mod+$down focus down
    bindsym --to-code $mod+$up focus up
    bindsym --to-code $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code $mod+Shift+$left move left
    bindsym --to-code $mod+Shift+$down move down
    bindsym --to-code $mod+Shift+$up move up
    bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

#
# Sound & Mic:
#
    # Toggle Mute
    bindsym --no-repeat XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    # Raise Master Volume by 5%
    bindsym XF86AudioRaiseVolume exec $HOME/.config/sway/scripts/volumeinc.sh
    # Lower Master Volume by 5%
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%

    # Toggle Mic
    bindsym --no-repeat XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
#
# Backlight
#
    # Increase/Decrease -No fancy checks as it handles edge cases already-
    bindsym XF86MonBrightnessUp exec brightnessctl --device=amdgpu_bl1 set +5%
    bindsym XF86MonBrightnessDown exec brightnessctl --device=amdgpu_bl1 set 5%-

# Screenshot
    bindsym --no-repeat $mod+Print exec grim -t jpeg -q 100 -c && notify-send -t 1500 Screenshot "Screenshot saved successfully"
    bindsym --no-repeat $mod+Shift+Print exec slurp | grim -t jpeg -q 100 -g - && notify-send -t 1500 Screenshot "Screenshot saved successfully"
# Lock
    bindsym --no-repeat XF86Tools exec swaylock
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code $mod+b splith
    bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    bindsym --to-code $mod+s layout stacking
    bindsym --to-code $mod+w layout tabbed
    bindsym --to-code $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent
    bindsym --to-code $mod+Shift+a focus child 

    # Window Rules
    for_window [title="COMMANDEXEC"] floating enable, resize set 500px 100px
    for_window [app_id="google-chrome" title="(Open File|Save File|Location|[Ss]elect*|[Cc]hoose*)"] floating enable, resize set 700px 500px
    for_window [app_id="google-chrome" title="DevTools -*"] floating enable, resize set 700px 700px
    for_window [app_id="mpv" tiling] floating enable
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym --to-code $mod+r mode "resize"

#
# Appearance
#
smart_borders on
smart_gaps on
gaps outer 3
gaps inner 5

font "NotoSans Regular 11"

#
# Colors
#
# target                 title     bg      text      indicator  border
client.focused           $crust    $crust  $lavender $rosewater $base
client.focused_inactive  $mantle   $mantle $subtext1 $rosewater $mantle
client.unfocused         $base     $base   $subtext0 $rosewater $mantle
client.urgent            $peach    $base   $peach    $overlay0  $peach
client.background        $base

#
# Window Titles:
#
title_align center

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top
    font "MesloLGMNerdFont Mono Bold 11"
    height 26
    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while $HOME/.config/sway/scripts/sway_bar.sh; do sleep 1; done
    colors {
        background         $base
        statusline         $text
        focused_statusline $lavender
        focused_separator  $base

        # target           border bg        text
        focused_workspace  $base  $mauve    $crust
        active_workspace   $base  $surface2 $text
        inactive_workspace $base  $crust    $text
        urgent_workspace   $base  $red      $crust
    }
}

